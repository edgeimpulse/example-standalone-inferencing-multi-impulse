/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef _EI_CLASSIFIER_MODEL_VARIABLES_H_
#define _EI_CLASSIFIER_MODEL_VARIABLES_H_

#include <stdint.h>
#include "model_metadata.h"

#include "edge-impulse-sdk/classifier/ei_run_dsp.h"
#include "edge-impulse-sdk/classifier/ei_model_types.h"

#include "tflite-model/tflite-trained_mic.h"
#include "tflite-model/tflite-trained_acc.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"

const char* ei_classifier_inferencing_categories[] = { "idle", "snake", "updown", "wave" };

uint8_t ei_dsp_config_acc_24_axes[] = { 0, 1, 2 };
const uint32_t ei_dsp_config_acc_24_axes_size = 3;
ei_dsp_config_spectral_analysis_t ei_dsp_config_acc_24 = {
    2,
    3,
    1.0f,
    "low",
    8.0f,
    6,
    64,
    3,
    0.1f,
    "0.1, 0.5, 1.0, 2.0, 5.0",
    true,
    true
};

ei_model_dsp_t ei_dsp_blocks_acc[1] = {
    { // DSP block 24
        33,
        &extract_spectral_analysis_features,
        (void*)&ei_dsp_config_acc_24,
        ei_dsp_config_acc_24_axes,
        ei_dsp_config_acc_24_axes_size
    }
};

const ei_impulse_t impulse_acc = {
    .project_id = 132086,
    .project_owner = "Dmitry",
    .project_name = "Tutorial: Continuous motion recognition",

    .deploy_version = 74,
    .nn_input_frame_size = 33,
    .raw_sample_count = 125,
    .raw_samples_per_frame = 3,
    .dsp_input_frame_size = 125 * 3,

    .input_width = 0,
    .input_height = 0,
    .input_frames = 0,

    .interval_ms = 16,
    .label_count = 4,
    .has_anomaly = true,
    .frequency = 62.5,
    .use_quantized_dsp_block = false,

    .dsp_blocks_size = 1,
    .dsp_blocks = ei_dsp_blocks_acc,

    .object_detection = EI_OBJECT_DETECTION_NONE,
    .object_detection_count = 0,
    .object_detection_threshold = 0.0,
    .tflite_output_labels_tensor = 0,
    .tflite_output_score_tensor = 0,
    .tflite_output_data_tensor = 0,

    .tflite_arena_size = 2598,
    .tflite_file = trained_tflite_acc,
    .tflite_file_size = trained_tflite_acc_len,

    .tflite_input_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .tflite_input_quantized = true,
    .tflite_input_scale = 0.10108496993780136,
    .tflite_input_zeropoint = -72,
    .tflite_output_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .tflite_output_quantized = true,
    .tflite_output_scale = 0.00390625,
    .tflite_output_zeropoint = -128,

    .inferencing_engine = EI_CLASSIFIER_TFLITE,
    .compiled = true,
    .has_tflite_ops_resolver = true,
    .sensor = EI_CLASSIFIER_SENSOR_ACCELEROMETER,
    .fusion_string = "accX + accY + accZ",

    .slice_size = (125/4),
    .slices_per_model_window = 4,

    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    .categories = new const char*[4] {"idle", "snake", "updown", "wave"}
};

uint8_t ei_dsp_config_mic_3_axes[] = { 0 };
const uint32_t ei_dsp_config_mic_3_axes_size = 1;
ei_dsp_config_mfcc_t ei_dsp_config_mic_3 = {
    1,
    1,
    13,
    0.02f,
    0.02f,
    32,
    256,
    101,
    300,
    0,
    0.98f,
    1
};

ei_model_dsp_t ei_dsp_blocks_mic[1] = {
    { // DSP block 3
        637,
        &extract_mfcc_features,
        (void*)&ei_dsp_config_mic_3,
        ei_dsp_config_mic_3_axes,
        ei_dsp_config_mic_3_axes_size
    }
};

const ei_impulse_t impulse_mic = {
    .project_id = 135496,
    .project_owner = "Dmitry",
    .project_name = "Tutorial: Responding to your voice",

    .deploy_version = 42,
    .nn_input_frame_size = 637,
    .raw_sample_count = 16000,
    .raw_samples_per_frame = 1,
    .dsp_input_frame_size = 16000 * 1,

    .input_width = 0,
    .input_height = 0,
    .input_frames = 0,

    .interval_ms = 0.0625,
    .label_count = 3,
    .has_anomaly = false,
    .frequency = 16000,
    .use_quantized_dsp_block = false,

    .dsp_blocks_size = 1,
    .dsp_blocks = ei_dsp_blocks_mic,

    .object_detection = EI_OBJECT_DETECTION_NONE,
    .object_detection_count = 0,
    .object_detection_threshold = 0.0,
    .tflite_output_labels_tensor = 0,
    .tflite_output_score_tensor = 0,
    .tflite_output_data_tensor = 0,

    .tflite_arena_size = 11468,
    .tflite_file = trained_tflite_mic,
    .tflite_file_size = trained_tflite_mic_len,

    .tflite_input_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .tflite_input_quantized = true,
    .tflite_input_scale = 0.038736045360565186,
    .tflite_input_zeropoint = 3,
    .tflite_output_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .tflite_output_quantized = true,
    .tflite_output_scale = 0.00390625,
    .tflite_output_zeropoint = -128,

    .inferencing_engine = EI_CLASSIFIER_TFLITE,
    .compiled = false,
    .has_tflite_ops_resolver = true,
    .sensor = EI_CLASSIFIER_SENSOR_MICROPHONE,
    .fusion_string = "audio",

    .slice_size = (125/4),
    .slices_per_model_window = 4,

    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    .categories = new const char*[3] {"helloworld", "noise", "unknown"}
};

const ei_impulse_t ei_default_impulse = impulse_acc;

const ei_model_performance_calibration_t ei_calibration = {
    1, /* integer version number */
    926, /* average duration window ms */
    0.9209751525297545, /* detection threshold */
    753,  /* suppression ms */
    0x7, /* suppression flags */
};


#endif // _EI_CLASSIFIER_MODEL_METADATA_H_
